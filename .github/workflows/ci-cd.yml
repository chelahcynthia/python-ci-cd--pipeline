name: CI/CD Pipeline

# Triggers
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
# environment variables
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository}}
  PYTHON_VERSION: "3.11"
  jobs:
  # Job 1: Linting and Code Quality
  lint:
    name: Code Linting & Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      
      - name: Run Black (code formatting)
        run: black --check --diff src/ tests/
      
      - name: Run isort (import sorting)
        run: isort --check-only --diff src/ tests/
      
      - name: Run flake8 (linting)
        run: flake8 src/ tests/
      
      - name: Run pylint (static analysis)
        run: pylint src/
      
      - name: Run mypy (type checking)
        run: mypy src/

        # Job 2: Unit Tests
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint  # Only run if linting passes
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Run pytest with coverage
        run: |
          pytest tests/ --cov=src --cov-report=xml --cov-report=html --junitxml=pytest.xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: pytest.xml
